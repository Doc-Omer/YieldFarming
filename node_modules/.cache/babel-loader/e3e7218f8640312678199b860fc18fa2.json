{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\moham\\\\Documents\\\\OptimusFox\\\\Yield-Farming\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\moham\\\\Documents\\\\OptimusFox\\\\Yield-Farming\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\moham\\\\Documents\\\\OptimusFox\\\\Yield-Farming\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\moham\\\\Documents\\\\OptimusFox\\\\Yield-Farming\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\moham\\\\Documents\\\\OptimusFox\\\\Yield-Farming\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\moham\\\\Documents\\\\OptimusFox\\\\Yield-Farming\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\moham\\\\Documents\\\\OptimusFox\\\\Yield-Farming\\\\src\\\\components\\\\Airdrop.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\n\nvar Airdrop = /*#__PURE__*/function (_Component) {\n  _inherits(Airdrop, _Component);\n\n  //Airdrop to have a timer that counts down.\n  //initialize the countdown after our customers have stakes a certain amount\n  //timer functionality, countdonwn, startTimer, state - for time to work.\n  function Airdrop() {\n    var _this;\n\n    _classCallCheck(this, Airdrop);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Airdrop).call(this));\n    _this.state = {\n      time: {},\n      seconds: 20\n    };\n    _this.time = 0;\n    _this.startTime = _this.startTime.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Airdrop, [{\n    key: \"countDown\",\n    value: function countDown() {\n      var seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds\n      });\n\n      if (seconds = 0) {\n        clearInterval(this.timer);\n      }\n    }\n  }, {\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var hours, minutes, seconds;\n      hours = Math.floor(secs / (60 * 60));\n      var devisor_for_minutes = secs % (60 * 60);\n      minutes = Math.floor(devisor_for_minutes / 60);\n      var devisor_for_seconds = devisor_for_minutes % 60;\n      seconds = Math.ceil(devisor_for_seconds);\n      var obj = {\n        'h': hours,\n        'm': minutes,\n        's': seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var timeLeftVar = this.secondsToTime(this.state.seconds);\n      this.setState({\n        time: timeLeftVar\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, this.state.time.m, \":\", this.state.time.s);\n    }\n  }]);\n\n  return Airdrop;\n}(Component);\n\nexport default Airdrop;","map":{"version":3,"sources":["C:/Users/moham/Documents/OptimusFox/Yield-Farming/src/components/Airdrop.js"],"names":["React","Component","render","Airdrop","state","time","seconds","startTime","bind","countDown","setState","secondsToTime","clearInterval","timer","secs","hours","minutes","Math","floor","devisor_for_minutes","devisor_for_seconds","ceil","obj","timeLeftVar","color","m","s"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,MAAT,QAAuB,WAAvB;;IAEMC,O;;;AACF;AACA;AACA;AAEA,qBAAa;AAAA;;AAAA;;AACT;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,OAAO,EAAE;AAApB,KAAb;AACA,UAAKD,IAAL,GAAY,CAAZ;AACA,UAAKE,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,uDAAjB;AALS;AAMZ;;;;gCAEU;AACP,UAAIF,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAAX,GAAqB,CAAnC;AAEA,WAAKI,QAAL,CAAc;AACVL,QAAAA,IAAI,EAAE,KAAKM,aAAL,CAAmBL,OAAnB,CADI;AAEVA,QAAAA,OAAO,EAAEA;AAFC,OAAd;;AAIA,UAAGA,OAAO,GAAG,CAAb,EAAe;AACXM,QAAAA,aAAa,CAAC,KAAKC,KAAN,CAAb;AACH;AACJ;;;kCAEaC,I,EAAK;AACf,UAAIC,KAAJ,EAAWC,OAAX,EAAoBV,OAApB;AACAS,MAAAA,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAWJ,IAAI,IAAI,KAAG,EAAP,CAAf,CAAR;AAEA,UAAIK,mBAAmB,GAAGL,IAAI,IAAI,KAAK,EAAT,CAA9B;AACAE,MAAAA,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,mBAAmB,GAAC,EAA/B,CAAV;AAEA,UAAIC,mBAAmB,GAAGD,mBAAmB,GAAG,EAAhD;AACAb,MAAAA,OAAO,GAAGW,IAAI,CAACI,IAAL,CAAUD,mBAAV,CAAV;AAEA,UAAIE,GAAG,GAAG;AACN,aAAMP,KADA;AAEN,aAAMC,OAFA;AAGN,aAAMV;AAHA,OAAV;AAMA,aAAOgB,GAAP;AACH;;;wCAEkB;AACf,UAAIC,WAAW,GAAG,KAAKZ,aAAL,CAAmB,KAAKP,KAAL,CAAWE,OAA9B,CAAlB;AACA,WAAKI,QAAL,CAAe;AAACL,QAAAA,IAAI,EAAEkB;AAAP,OAAf;AACH;;;6BAGO;AACJ,0BACI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKpB,KAAL,CAAWC,IAAX,CAAgBoB,CADrB,OACyB,KAAKrB,KAAL,CAAWC,IAAX,CAAgBqB,CADzC,CADJ;AAKH;;;;EAxDiBzB,S;;AA2DtB,eAAeE,OAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport { render } from 'react-dom'\r\n\r\nclass Airdrop extends Component{\r\n    //Airdrop to have a timer that counts down.\r\n    //initialize the countdown after our customers have stakes a certain amount\r\n    //timer functionality, countdonwn, startTimer, state - for time to work.\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {time: {}, seconds: 20};\r\n        this.time = 0;\r\n        this.startTime = this.startTime.bind(this);\r\n        this.countDown = this.countDown.bind(this);\r\n    }\r\n\r\n    countDown(){\r\n        let seconds = this.state.seconds - 1\r\n\r\n        this.setState({\r\n            time: this.secondsToTime(seconds),\r\n            seconds: seconds\r\n        })\r\n        if(seconds = 0){\r\n            clearInterval(this.timer)\r\n        }\r\n    }\r\n\r\n    secondsToTime(secs){\r\n        let hours, minutes, seconds\r\n        hours = Math.floor(secs / (60*60))\r\n\r\n        let devisor_for_minutes = secs % (60 * 60)\r\n        minutes = Math.floor(devisor_for_minutes/60)\r\n\r\n        let devisor_for_seconds = devisor_for_minutes % 60\r\n        seconds = Math.ceil(devisor_for_seconds)\r\n\r\n        let obj = {\r\n            'h' : hours,\r\n            'm' : minutes,\r\n            's' : seconds\r\n        }\r\n\r\n        return obj\r\n    }\r\n\r\n    componentDidMount(){\r\n        let timeLeftVar = this.secondsToTime(this.state.seconds)\r\n        this.setState ({time: timeLeftVar})\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div style={{color: 'white'}}>\r\n                {this.state.time.m}:{this.state.time.s}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Airdrop;"]},"metadata":{},"sourceType":"module"}